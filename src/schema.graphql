type User {
    id: Int
    username: String!
    email: String 
    token: String
    imageUrl: String 
    createdAt: String
    latestMessage: Message
}

type Message {
    id: Int
    content: String!
    from: String!
    to: String! 
    createdAt: String
}


# ROOT TYPE
type Query {
    getUsers: [User]!
    getMessages(from: String!): [Message]!
}

type Mutation {
    register(username: String!, email: String!, password: String!, confirmPassword: String!): User!
    login(username: String!, password: String!): User!
    sendMessage(to: String!, content: String!): Message!
}

type Subscription {
    newMessage: Message!
}